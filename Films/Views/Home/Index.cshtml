<div id="app">
    <el-table ref="singleTable" :data="Films" highlight-current-row v-on:current-change="handleCurrentChange" style="width: 100%">
        <el-table-column type="FilmId" width="50"></el-table-column>
        <el-table-column property="FilmName" label="Название"></el-table-column>
        <el-table-column property="Year" label="Год выпуска"></el-table-column>
        <el-table-column property="Country.CountryName" label="Страна"></el-table-column>
        <el-table-column property="Director.DirectorName" label="Режиссер"></el-table-column>
        <el-table-column property="Actors" label="Актеры"></el-table-column>
        <el-table-column property="Ganres" label="Жанр"></el-table-column>
    </el-table>
    <div style="margin-top: 20px">
        <el-button v-on:click="setCurrent(Films[1])">Select second row</el-button>
        <el-button v-on:click="setCurrent()">Clear selection</el-button>
    </div>
    
    <div v-if="Films != null && Films.length > 0">
        <ul>
            <li v-for="film in Films">
                {{film.FilmId}}, {{film.FilmName}}, {{film.Year}}, {{film.Notice}}, {{film.Actors}}
            </li>
        </ul>
    </div>
    <div>
        Film2: {{Film2}}
    </div>
    <div>
        Film3: {{Film3}}
    </div>
    <div>
        FilmNew: {{FilmNew}}
    </div>

    <button v-on:click="FilmDelete">Удалить</button>
    <input v-model="FilmDeleteId">

    <button v-on:click="FilmAdd">Добавить</button>

    <button v-on:click="FilmEdit">Изменить название 3-го фильма</button>
    <input v-model="Film3Name">
</div>

<script>
    var app = new Vue({
        el: '#app',
        
        data: {
            Films: null,
            Film2: null,
            Film3: null,
            FilmNew: null,
            FilmDeleteId: 0,
            Film3Name: '',
            EditMode: false,
            currentRow: null
        },

        mounted: function () {
            this.FilmsInit();
            this.FilmInit(2);
            this.FilmInit(3);
        },

        methods: {
            FilmDelete: function() {
                window.axios.delete(`/api/films/${app.FilmDeleteId}`)
                    .then(function (response) {
                        console.log(response.data);
                        app.FilmsInit();
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },

            FilmEdit: function() {
                app.Film3.FilmName = app.Film3Name;

                window.axios({
                    method: 'PUT',
                    url: '/api/films/3',
                    data: app.Film3
                })
                .then(function (response) {
                    console.log(response.data);
                    app.FilmsInit();
                    app.Film3 = response.data;
                })
                .catch(function (error) {
                    console.log(error);
                });
            },

            FilmAdd: function () {
                app.FilmNew = {
                    FilmId: 0,
                    FilmName: '!!!Новый фильм',
                    Year: 2000,
                    Notice: 'Какой-то новый фильм',
                    CountryId: 4,
                    DirectorId: 2,
                    ActorList: [{ ActorId: 1 }, { ActorId: 2 }, { ActorId: 6 }]//,
                    //GanreList: [{ GanreId: 1 }, { GanreId: 2 }, { GanreId: 6 }]
                }
                
                window.axios({
                        method: 'POST',
                        url: '/api/films',
                        data: app.FilmNew
                    })
                    .then(function (response) {
                        console.log('add ', response.data);
                        app.FilmsInit();
                        app.FilmInit(response.data.FilmId);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },

            FilmsInit: function() {
                window.axios.get('/api/films')
                    .then(function (response) {
                        app.Films = response.data;
                    })
                    .catch(function (error) {
                        app.Films = null;
                        console.log(error);
                    });
            },

            FilmInit: function(id) {
                window.axios.get(`/api/films/${id}`)
                    .then(function (response) {
                        if (id === 2) {
                            app.Film2 = response.data;
                        } else if (id === 3) {
                            app.Film3 = response.data;
                        } else {
                            app.FilmNew = response.data;
                        }
                    })
                    .catch(function (error) {
                        if (id === 2) {
                            app.Film2 = null;
                        } else if (id === 3) {
                            app.Film3 = null;
                        } else {
                            app.FilmNew = response.data;
                        }
                        console.log(error);
                    });
            },

            setCurrent(row) {
                this.$refs.singleTable.setCurrentRow(row);
            },

            handleCurrentChange(val) {
                this.currentRow = val;
            }
        }
    });
</script>
